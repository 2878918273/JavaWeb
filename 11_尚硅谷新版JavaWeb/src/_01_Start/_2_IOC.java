package _01_Start;

/*
IOC
    1)耦合/依赖
     依赖指的是某某某离不开某某某
     在软件系统中，层与层之间是存在依赖的。我们也称之为耦合。
     我们系统架构或者是设计的一个原则是：高内聚低耦合
     层内部的组成应该是高度聚合的，而层与层之间的关系应该是低耦合的，最理想的情况是0耦合（就是没有耦合）

     Node 节点
        Element 元素节点
        Text 文本节点
    <sname>jim</sname>

IOC - 控制反转 / DI - 依赖注入
控制反转：
    1） 如在Servlet中，我们创建一个实例对象a，如果创建的位置是在某个方法内部，那么这个对象a的作用域（生命周期）应该就是这个方法级别；
        创建的位置是在Servlet的类中，那么对象a就是该类的一个成员变量，那么这个对象a的作用域（生命周期）应该就是这个类级别；
    2）之后在xml中定义了对象a，通过解析XML，产生对象a实例，存放在一个容器中，如（Map），因此，我们转移改变了对象a实例的生命周期控制器由程序员转移到指定类的容器中，
        这个现象我们称之为控制反转




 */

/**
 * @author wx
 * @create 2023-05-31 9:06
 */
public class _2_IOC {
}
